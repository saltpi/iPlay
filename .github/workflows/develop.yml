name: üå∏ Build

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - '.editorconfig'
      - '.gitignore'
      - 'Copyright'
      - 'README.md'
      - 'RELEASE_NOTES'
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'doc/**'
      - '.editorconfig'
      - '.gitignore'
      - 'Copyright'
      - 'README.md'
      - 'RELEASE_NOTES'

jobs:
  build:
    name: üå∏ Build
    runs-on: macos-14

    steps:
      - name: üëÄ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GH_PAT }}
          
      - name: üêß set up Swift
        uses: swift-actions/setup-swift@v2
        with:
          swift-version: "5.10.1"
      
      - name: ‚òïÔ∏è set up JDK
        uses: actions/setup-java@v3
        with:
            java-version: '17'
            distribution: 'zulu'
            cache: gradle

      - name: üî® Select Xcode version
        run: |
          # ls /Applications/
          sudo xcode-select --switch /Applications/Xcode_15.4.app
          export TOOLCHAINS=swift
          swift --version
      
      - name: üï∏Ô∏è Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: üï∏Ô∏è Cache CocoaPods
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: üß± Install Dependencies
        run: |
          npm install
          cd ios && pod install

      - name: üß¨ Build
        env:
          scheme: ${{ 'default' }}
          DEVELOPER_DIR: /Applications/Xcode_15.4.app/Contents/Developer
        run: |
          rm -rf ios/iPlayClient.xcworkspace/xcshareddata/swiftpm/Package.resolved
          make all

      - name: ‚¨ÜÔ∏è Upload Build Artifact To GitHub
        uses: actions/upload-artifact@v3
        with:
            name: artifact
            path: |
              build/*.apk
              build/*.ipa
        

      - name: ‚¨ÜÔ∏è Upload Build Artifact
        env:
          scheme: ${{ 'default' }}
        run: |
          buildtime=$(date '+%Y%m%d.%H%M')
          python -m pip install requests
          echo "Uploading build artifacts..."
          echo "Uploaded iPlay.ipa"
          python ./tools/upload.py --url "https://drive.endemy.me/od_bot/build/iPlay/$buildtime/iPlay.ipa" \
            --file "$PWD/build/iPlay.ipa" \
            --token "${{ secrets.CLIENT_ID }}"
          echo "Uploaded iPlay.apk"
          python ./tools/upload.py --url "https://drive.endemy.me/od_bot/build/iPlay/$buildtime/iPlay-x86_64.apk" \
            --file "$PWD/build/iPlay-x86_64.apk" \
            --token "${{ secrets.CLIENT_ID }}"
          python ./tools/upload.py --url "https://drive.endemy.me/od_bot/build/iPlay/$buildtime/iPlay-arm64-v8a.apk" \
            --file "$PWD/build/iPlay-arm64-v8a.apk" \
            --token "${{ secrets.CLIENT_ID }}"
          python ./tools/upload.py --url "https://drive.endemy.me/od_bot/build/iPlay/$buildtime/iPlay-armeabi-v7a.apk" \
            --file "$PWD/build/iPlay-armeabi-v7a.apk" \
            --token "${{ secrets.CLIENT_ID }}"
